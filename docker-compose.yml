version: '3'
x-common:
  &airflow-common
  image: airflow:$AIRFLOW_VERSION
  environment:
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=$AIRFLOW_DATABASE_CONN
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=$AIRFLOW_DATABASE_CONN
  env_file:
    - '.env'

services:
  mysql:
    image: mysql:8.0.33
    container_name: $DB_HOST_INTERNAL
    env_file:
      - '.env'
    ports:
      - $DB_PORT:3306

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: $ZOOKEEPER_HOST_INTERNAL
    env_file:
      - '.env'
    ports:
      - $ZOOKEEPER_PORT:2181

  broker:
    image: confluentinc/cp-kafka:7.4.0
    container_name: $KAFKA_HOST_INTERNAL
    env_file:
      - '.env'
    depends_on:
      - zookeeper
    ports:
      - $BROKER_PORT:$BROKER_PORT

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    container_name: $SCHEMA_REGISTRY_HOST_INTERNAL
    depends_on:
      - broker
    ports:
      - $REGISTRY_PORT:8081
    env_file:
      - .env

  kafka-connect:
    image: kafka-connect
    build: connect/docker/
    container_name: $CONNECT_HOST_INTERNAL
    depends_on:
      - broker
      - schema-registry
    ports:
      - $CONNECT_REST_PORT:8083
    env_file:
      - .env
    command: "./run.sh"

  stream-processor:
    depends_on:
      - kafka-connect
      - mysql
    build: stream/
    image: stream-processor
    container_name: $PROCESSOR_HOST_INTERNAL
    env_file:
      - '.env'
    command: "python3 main.py"
  
  postgres:
    image: postgres:13
    container_name: $POSTGRES_HOST_INTERNAL
    env_file:
    - '.env'
    

  airflow-init:
    <<: *airflow-common
    build:
      context: batch/
      args:
        - AIRFLOW_HOME=$AIRFLOW_HOME
        - DAGS_FOLDER=$DAGS_FOLDER
        - AIRFLOW_VERSION=$AIRFLOW_VERSION
        - PYTHON_VERSION=$PYTHON_VERSION
    container_name: $INIT_HOST_INTERNAL
    entrypoint: bash -c
    command: ./setup.sh
    depends_on:
      - postgres

  airflow-scheduler:
    <<: *airflow-common
    container_name: $SCHEDULER_HOST_INTERNAL
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
  
  airflow-webserver:
    <<: *airflow-common
    container_name: $WEBSERVER_HOST_INTERNAL
    command: webserver
    ports:
      - $WEBSERVER_PORT:8080
    depends_on:
      - airflow-scheduler

  metabase:
    image: metabase/metabase:$METABASE_VERSION
    container_name: metabase
    ports:
    - $METABASE_PORT:3000
    env_file:
    - '.env'
